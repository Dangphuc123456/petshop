<link rel="stylesheet" href="{{ asset('css/chatbot.css') }}">

<button id="chatbot-toggle">üí¨ Chat</button>

<div id="chatbot-container">
    <div class="chatbot-header">
        <strong>üêæ Petshop Bot</strong>
        <span id="chatbot-close">√ó</span>
    </div>
    <div id="chat-suggestions" style="margin-bottom: 10px;">
        <div id="suggestion-buttons"></div>
    </div>
    <div id="chatbox"></div>

    <div class="chatbot-input">
        <input type="text" id="message" placeholder="Nh·∫≠p c√¢u h·ªèi..." />
        <button id="send-btn" onclick="sendMessage()" title="G·ª≠i">
            <i class="fa fa-paper-plane"></i>
        </button>
    </div>
</div>

<script>
    const inputEl = document.getElementById('message');
    const chatbox = document.getElementById('chatbox');

    function sendMessage(msgFromSuggestion = null) {
        const msg = msgFromSuggestion || inputEl.value;
        if (!msg.trim()) return;

        // Hi·ªÉn th·ªã tin nh·∫Øn c·ªßa user
        chatbox.innerHTML += `<div class="user">B·∫°n: ${msg}</div>`;
        inputEl.value = '';
        chatbox.scrollTop = chatbox.scrollHeight;

        // Hi·ªÉn th·ªã typing indicator
        const typingEl = document.createElement('div');
        typingEl.classList.add('bot', 'typing');
        typingEl.innerHTML = `Bot ƒëang vi·∫øt` +
            `<span class="dot"></span><span class="dot"></span><span class="dot"></span>`;
        chatbox.appendChild(typingEl);
        chatbox.scrollTop = chatbox.scrollHeight;

        // G·ª≠i request
        fetch('/chatbot', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': '{{ csrf_token() }}'
                },
                body: JSON.stringify({
                    message: msg
                })
            })
            .then(res => res.json())
            .then(data => {
                typingEl.remove();
                chatbox.innerHTML += `<div class="bot">${data.reply}</div>`;
                chatbox.scrollTop = chatbox.scrollHeight;
            })
            .catch(err => {
                typingEl.remove();
                chatbox.innerHTML += `<div class="bot">C√≥ l·ªói, th·ª≠ l·∫°i sau nh√©.</div>`;
                chatbox.scrollTop = chatbox.scrollHeight;
            });
    }

    // G·ª£i √Ω c√¢u h·ªèi m·∫∑c ƒë·ªãnh khi m·ªü chatbot
    function showDefaultQuestions() {
        chatbox.innerHTML += `<div class="bot">Xin ch√†o ! M√¨nh c√≥ th·ªÉ gi√∫p ƒë·ª° g√¨ b·∫°n ?:V√≠ d·ª•.<br>
        Shop c√≥ nh·ªØng lo·∫°i th√∫ c∆∞ng n√†o?<br>
            Th·ªùi gian m·ªü c·ª≠a c·ªßa shop l√† khi n√†o?<br>
            Shop c√≥ ch√≠nh s√°ch ƒë·ªïi tr·∫£ kh√¥ng?<br>
            Ph·ª• ki·ªán c√≥ ƒë∆∞·ª£c b·∫£o h√†nh kh√¥ng?
            </div>`;
        defaultQuestions.forEach(q => {
            const btn = document.createElement('div');
            btn.classList.add('bot', 'suggestion-bubble');
            btn.innerText = q;
            btn.style.cursor = 'pointer';
            btn.onclick = () => sendMessage(q);
            chatbox.appendChild(btn);
        });

        chatbox.scrollTop = chatbox.scrollHeight;
    }

    // G·ª≠i khi nh·∫•n n√∫t
    document.getElementById('send-btn').onclick = () => sendMessage();

    // G·ª≠i khi nh·∫•n Enter
    inputEl.addEventListener('keydown', function(e) {
        if (e.key === 'Enter') {
            e.preventDefault();
            sendMessage();
        }
    });

    // M·ªü chatbot
    document.getElementById('chatbot-toggle').onclick = () => {
        document.getElementById('chatbot-container').style.display = 'block';
        chatbox.innerHTML = ''; // reset n·ªôi dung chat
        showDefaultQuestions();
    };

    // ƒê√≥ng chatbot
    document.getElementById('chatbot-close').onclick = () => {
        document.getElementById('chatbot-container').style.display = 'none';
    };
</script>